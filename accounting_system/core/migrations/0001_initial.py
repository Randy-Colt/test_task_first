# Generated by Django 3.2.3 on 2024-10-27 19:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationStorageDist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.PositiveIntegerField(verbose_name='Расстояние')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='StorageDistance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.PositiveIntegerField(verbose_name='Расстояние')),
            ],
        ),
        migrations.CreateModel(
            name='Waste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biowaste', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Биоотходы')),
                ('glass', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Стекло')),
                ('plastic', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Пластик')),
                ('biowaste_max', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Предел биоотходов')),
                ('glass_max', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Предел стекла')),
                ('plastic_max', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Предел пластика')),
            ],
            options={
                'verbose_name': 'Отходы',
                'verbose_name_plural': 'Отходы',
            },
        ),
        migrations.AddConstraint(
            model_name='waste',
            constraint=models.CheckConstraint(check=models.Q(('biowaste__lte', django.db.models.expressions.F('biowaste_max'))), name='check_biowaste'),
        ),
        migrations.AddConstraint(
            model_name='waste',
            constraint=models.CheckConstraint(check=models.Q(('glass__lte', django.db.models.expressions.F('glass_max'))), name='check_glass'),
        ),
        migrations.AddConstraint(
            model_name='waste',
            constraint=models.CheckConstraint(check=models.Q(('plastic__lte', django.db.models.expressions.F('plastic_max'))), name='check_plastic'),
        ),
        migrations.AddField(
            model_name='storagedistance',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighbour', to='core.storage', verbose_name='Хранилище'),
        ),
        migrations.AddField(
            model_name='storagedistance',
            name='storage_neighbour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.storage', verbose_name='Соседнее хранилище'),
        ),
        migrations.AddField(
            model_name='storage',
            name='nearby_storage',
            field=models.ManyToManyField(related_name='_core_storage_nearby_storage_+', through='core.StorageDistance', to='core.Storage'),
        ),
        migrations.AddField(
            model_name='storage',
            name='waste',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.waste'),
        ),
        migrations.AddField(
            model_name='organizationstoragedist',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nearby_storage', to='core.organization', verbose_name='Организация'),
        ),
        migrations.AddField(
            model_name='organizationstoragedist',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nearby_organization', to='core.storage', verbose_name='Хранилище'),
        ),
        migrations.AddField(
            model_name='organization',
            name='storage',
            field=models.ManyToManyField(through='core.OrganizationStorageDist', to='core.Storage'),
        ),
        migrations.AddField(
            model_name='organization',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='organization', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='organization',
            name='waste',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='waste', to='core.waste', verbose_name='Отходы'),
        ),
    ]
